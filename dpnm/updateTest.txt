function updateServers() {

    var opts, serverInfo;
    var cursor = Tasks.find({});
    cursor.forEach(function (info) {
      console.log(info)
  console.log("info ^^")
  console.log(info.ip)
  console.log(info.port)
      opts = { range: [String(info.ip)], ports: String(parseInt(info.port) + 1) }
      console.log(opts)
      console.log("opts is above this")

      libnmap.nmap('scan', opts, Meteor.bindEnvironment(function(err, report){
        if (err) throw err
        report.forEach(function(item) {
        serverInfo = (item[0])
        console.log(info.status)
        console.log(info.service)

        Tasks.update({ip: info.ip}, {
          $set:
          {
            port: serverInfo.ports[0].port,
            status: serverInfo.ports[0].state,
            service: serverInfo.ports[0].service
          }
        });
      });
    }));
    });

//    if (serverInfo.ports[0].state == "closed") {  // If server is down, send mail
  //          Email.send({to: 'josephl@live.ca',      // Can change email to anything
   //               from: 'throwaway42794@gmail.com',
     //             subject: info.ip + " has gone down (port:  " + info.port + ").",
       //           text: "Read subject!"
     // });
}

141.223.82.74
110


{to: Tasks.find({username: "admin"}, {"emails[0].address": 1, _id: 0}),      // Can change email to anything




updateServers as a method

  updateServers: function () {

      var opts, serverInfo;
      console.log("middle of updateServers");
      var cursor = Tasks.find({});
      cursor.forEach(function (info) {
  /**      console.log(info)
        console.log("info ^^")
        console.log(info.ip)
        console.log(info.port) */
  opts = { range: [String(info.ip)], ports: String(parseInt(info.port) + 1) }
//      console.log(opts)
//      console.log("opts is above this")

  libnmap.nmap('scan', opts, Meteor.bindEnvironment(function(err, report){
    if (err) throw err
    report.forEach(function(item) {
    serverInfo = (item[0])
//        console.log(info.status)
//        console.log(info.service)

    Tasks.update({ip: info.ip}, {
      $set:
      {
        port: serverInfo.ports[0].port,
        status: serverInfo.ports[0].state,
        service: serverInfo.ports[0].service
            }
          });
        });

        if (serverInfo.ports[0].state == "closed") {  // If server is down, send mail
              Email.send({to: 'josephl@live.ca',      // Can change email to anything
                    from: 'throwaway42794@gmail.com',
                    subject: info.ip + " has gone down (port:  " + info.port + ").",
                    text: "Read subject!"
        });
        }
},
